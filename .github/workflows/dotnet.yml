# This workflow will build a .NET project and create a release for linux-x64
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET

on:
  push:
    branches: [ "ScriptJson" ]
  pull_request:
    branches: [ "ScriptJson" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x
    - name: Restore dependencies
      run: dotnet restore
    - name: Build
      run: dotnet build --no-restore
    - name: Test
      run: dotnet test --no-build --verbosity normal
    - name: Publish
      run: dotnet publish -c Release -r linux-x64 --self-contained -o ./publish

    - name: Create artifact
      uses: actions/upload-artifact@v3
      with:
        name: linux-x64
        path: ./publish/

  create_tag:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    - name: Get the current version
      id: get_version
      run: echo ::set-output name=version::$(date +'%Y%m%d%H%M%S')
    - name: Create Release Tag
      id: create_tag
      run: |
        git config --local user.name "github-actions"
        git config --local user.email "github-actions@github.com"
        git tag -a v${{ steps.get_version.outputs.version }} -m "Release ${{ steps.get_version.outputs.version }}"
        git push origin v${{ steps.get_version.outputs.version }}

  release:
    runs-on: ubuntu-latest
    needs: create_tag
    steps:
    - uses: actions/checkout@v4
    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: linux-x64
        path: ./release-artifacts

    - name: Create GitHub Release
      id: create_release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v${{ steps.get_version.outputs.version }}
        files: ./release-artifacts/**
      env:
        GITHUB_TOKEN: ${{ secrets.TOKEN_SECRETA }}
